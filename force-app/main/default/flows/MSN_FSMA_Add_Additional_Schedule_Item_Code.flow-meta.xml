<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <assignments>
        <description>Assign additional values to the Work Step record that will represent the newly selected Schedule Item Code before the record will be created in a subsequent step. Please note: some fields - SIC Code, SPC Code and Work Step Answer - were already populated by the Record Choice Set &quot;choiceSet_SearchAllowedScheduleItems&quot;.</description>
        <name>Assign_Work_Step_Record_Values</name>
        <label>Assign Work Step Record Values</label>
        <locationX>50</locationX>
        <locationY>2366</locationY>
        <assignmentItems>
            <assignToReference>var_SIC_WorkStep_SingleRecord.Name</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Additional Schedule Item Code</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>var_SIC_WorkStep_SingleRecord.Status</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Completed</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>var_SIC_WorkStep_SingleRecord.MSN_Service_Appointment__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>var_SIC_WorkStep_SingleRecord.WorkOrderId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>ParentId</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>var_SIC_WorkStep_SingleRecord.WorkOrderLineItemId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>var_WorkOrderLineItem_SingleRecord.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>var_SIC_WorkStep_SingleRecord.MSN_Mandatory_WorkStep__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>var_SIC_WorkStep_SingleRecord.MSN_Answer_Type__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Schedule Item Code</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>var_SIC_WorkStep_SingleRecord.ExecutionOrder</assignToReference>
            <operator>Assign</operator>
            <value>
                <numberValue>2.0</numberValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>var_SIC_WorkStep_SingleRecord.Description</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Select the relevant Schedule Item Code for your job from the picklist.</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>var_SIC_WorkStep_SingleRecord.ActionDefinition</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>MSN_FSMA_Complete_All_Open_WorkSteps</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>var_SIC_WorkStep_SingleRecord.WorkPlanId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>var_WorkPlanId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Create_WorkStep_Record</targetReference>
        </connector>
    </assignments>
    <decisions>
        <description>This decision is used as a validation if any &quot;Allowed Schedule Items&quot; exist against the Work Type of the WOLI previously selected by the user in the last screen. If the variable from the last Get Records element is &quot;null&quot;, then show an error message and let the user fail gracefully.</description>
        <name>Decision_AllowedScheduleItems_exist</name>
        <label>Check if Allowed Schedule Items exist</label>
        <locationX>226</locationX>
        <locationY>1670</locationY>
        <defaultConnector>
            <targetReference>Screen_No_ScheduleItemCodes</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No Allowed Schedule Items for Worktype</defaultConnectorLabel>
        <rules>
            <name>outcome_AllowedScheduleItems_exist</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>var_AllowedScheduleItem_exists</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Screen_SelectSIC</targetReference>
            </connector>
            <label>Allowed Schedule Items exist for Worktype</label>
        </rules>
    </decisions>
    <decisions>
        <description>This decision is used as a validation if the Parent Work Orders has related WOLIs by checking whether the previous Get Records element is &quot;null&quot;. If so prompt the user to open the &quot;Add another Asset&quot; flow from the mobile app first before attempting to use this flow again.</description>
        <name>Decision_Check_if_WOLIS_exist</name>
        <label>Check if Work Order Line Items exist?</label>
        <locationX>446</locationX>
        <locationY>1310</locationY>
        <defaultConnector>
            <targetReference>Screen_NoWOLIFound</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Work Order Line Items does not exist</defaultConnectorLabel>
        <rules>
            <name>outcome_WOLI_Exists</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>var_WorkOrderLineItemId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Screen_SelectWOLI</targetReference>
            </connector>
            <label>Work Order Line Item Exists</label>
        </rules>
    </decisions>
    <decisions>
        <description>Determine the Object Type of the Parent Record Id triggering this flow. This is required to avoid having two flows to cater for the following scenarios:
1) The &quot;Add Installed Asset&quot; flow was launched from a Service Appointment that is related to a &quot;Work Order&quot;
2) OR The &quot;Add Installed Asset&quot; flow was launched from a Service Appointment that is related to a &quot;Work Order Line Item&quot;

In order to determine what object type the record Id is from, we find the Object type from the static &quot;Record ID prefix&quot; (first 3 digits of the ID) which is always the same on Standard objects:
- For &quot;Work Order&quot; objects the prefix is: 0WO
- For &quot;Work Order Line Items&quot; objects the prefix is: 1WL 

It was deliberately chosen to use those static/hardcoded prefixes for the decision outcomes as it only needs to cater to the above 2 cases and respect especially the Field Service Mobile App limitations in regards FSL Mobile Flow capabilities - even though it might not be best practice in general to use hardcoded elements.</description>
        <name>Decision_DetermineObjectType_ParentRecord</name>
        <label>Determine Object Type of Parent Record</label>
        <locationX>446</locationX>
        <locationY>614</locationY>
        <defaultConnector>
            <targetReference>Screen_UnknownObjectType</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Parent Work Order not Identified</defaultConnectorLabel>
        <rules>
            <name>outcome_Parent_Record_Is_WO</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>ParentId</leftValueReference>
                <operator>StartsWith</operator>
                <rightValue>
                    <stringValue>0WO</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Parent_WorkOrder_Details</targetReference>
            </connector>
            <label>Work Order</label>
        </rules>
        <rules>
            <name>outcome_Parent_Record_Is_WOLI</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>ParentId</leftValueReference>
                <operator>StartsWith</operator>
                <rightValue>
                    <stringValue>1WL</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_ParentRecordId_WOLI</targetReference>
            </connector>
            <label>Work Order Line Item</label>
        </rules>
    </decisions>
    <decisions>
        <description>This decision caters for the usecase, that a &quot;Add Installed Asset&quot; could also be requested from Salesforce Desktop (e.g. by a Job Coordinator) and not only from the Field Service Mobile App. It checks, whether the flow was opened from the Field Service Mobile App or from Desktop in order to request a Reinstatement. If the variable &quot;Id&quot; is filled it is opened from the Mobile App, if the variable &quot;recordId&quot; is filled, then it was opened from Desktop and then populates the &quot;Id&quot; variable to lookup the correct Service Appointment in the next step.</description>
        <name>Decision_OpenedFromMobileOrDesktop</name>
        <label>Opened from FSL Mobile App or Desktop?</label>
        <locationX>446</locationX>
        <locationY>158</locationY>
        <defaultConnector>
            <targetReference>Screen_NoRecordId</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>outcome_OpenedFromMobileApp</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Decision_DetermineObjectType_ParentRecord</targetReference>
            </connector>
            <label>Field Service Mobile App</label>
        </rules>
        <rules>
            <name>outcome_OpenedFromDesktop</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>recordId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_ServiceAppointment_IDs_DesktopFlow</targetReference>
            </connector>
            <label>Desktop</label>
        </rules>
    </decisions>
    <decisions>
        <description>This decision is used as a validation if any &quot;Allowed Schedule Items&quot; exist against the Work Type of the WOLI previously selected by the user in the last screen. If the variable from the last Get Records element is &quot;null&quot;, then show an error message and let the user fail gracefully.</description>
        <name>Decision_WorkPlan_exists</name>
        <label>Check if Work Plan exists</label>
        <locationX>50</locationX>
        <locationY>2030</locationY>
        <defaultConnector>
            <targetReference>Create_WorkPlan_Record</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Work Plan does not exist</defaultConnectorLabel>
        <rules>
            <name>outcome_WorkPlan_exists</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>var_WorkPlanId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_Work_Step_Record_Values</targetReference>
            </connector>
            <label>Work Plan exists</label>
        </rules>
    </decisions>
    <description>07/09/2022 - V1:  Initial Version. See https://watercarestp.atlassian.net/browse/MSRS-2061 for details
12/09/2022 - V2:  Resolved Problem with Get Element &quot;Get Work Order Line Item&quot; on Desktop throwing an error when no WOLI found; Use separate var_WorkOrderLineItemId variable in Get element instead of RecordVariable</description>
    <dynamicChoiceSets>
        <description>Used to Search for any Work Types that are allowed/match the &quot;Asset Type&quot; of the looked-up Asset the user selected on the previous screens. The allowed Asset Types are configured in a related list &quot;Allowed Asset Types&quot; to the &quot;Work Type&quot;. Please note that due to limitations in the Field Service Mobile App, a RecordChoice set has to be used for the lookup instead of a Get Records element in order to show the user a list of search results.</description>
        <name>choiceSet_SearchAllowedScheduleItems</name>
        <dataType>String</dataType>
        <displayField>MSN_ScheduleItem_Description__c</displayField>
        <filterLogic>and</filterLogic>
        <filters>
            <field>MSN_Work_Type__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>var_WorkOrderLineItem_SingleRecord.WorkTypeId</elementReference>
            </value>
        </filters>
        <object>MSN_Allowed_ScheduleItems__c</object>
        <outputAssignments>
            <assignToReference>var_SIC_WorkStep_SingleRecord.MSN_ScheduleItem_Code__c</assignToReference>
            <field>MSN_ScheduleItem_Code__c</field>
        </outputAssignments>
        <outputAssignments>
            <assignToReference>var_SIC_WorkStep_SingleRecord.MSN_WorkStep_Answer__c</assignToReference>
            <field>MSN_ScheduleItem_Description__c</field>
        </outputAssignments>
        <outputAssignments>
            <assignToReference>var_SIC_WorkStep_SingleRecord.MSN_Service_Product_Code__c</assignToReference>
            <field>MSN_Service_Product_Code__c</field>
        </outputAssignments>
        <sortField>Name</sortField>
        <sortOrder>Asc</sortOrder>
        <valueField>MSN_ScheduleItem_Description__c</valueField>
    </dynamicChoiceSets>
    <dynamicChoiceSets>
        <description>Used to Search for any Work Order Line Items that are related to the parent Work Order of the Service Appointment triggering this flow. This will be used to present the user a list of all WOLIs and their Work Type to choose from. Please note that due to limitations in the Field Service Mobile App, a RecordChoice set has to be used for the lookup instead of a Get Records element in order to show the user a list of search results.</description>
        <name>choiceSet_SearchWorkOrderLineItems</name>
        <dataType>String</dataType>
        <displayField>MSN_WorkType_Asset_Name__c</displayField>
        <filterLogic>and</filterLogic>
        <filters>
            <field>WorkOrderId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>ParentId</elementReference>
            </value>
        </filters>
        <object>WorkOrderLineItem</object>
        <outputAssignments>
            <assignToReference>var_WorkOrderLineItem_SingleRecord.AssetId</assignToReference>
            <field>AssetId</field>
        </outputAssignments>
        <outputAssignments>
            <assignToReference>var_WorkOrderLineItem_SingleRecord.Id</assignToReference>
            <field>Id</field>
        </outputAssignments>
        <outputAssignments>
            <assignToReference>var_WorkOrderLineItem_SingleRecord.WorkTypeId</assignToReference>
            <field>WorkTypeId</field>
        </outputAssignments>
        <sortField>LineItemNumber</sortField>
        <sortOrder>Asc</sortOrder>
        <valueField>Id</valueField>
    </dynamicChoiceSets>
    <environments>Default</environments>
    <interviewLabel>MSN - Field Service Mobile App - Add Additional Schedule Item Code {!$Flow.CurrentDateTime}</interviewLabel>
    <label>MSN - Field Service Mobile App - Add Additional Schedule Item Code</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>FieldServiceMobile</processType>
    <recordCreates>
        <description>Create a new Work Plan as prerequisite to adding a Work Step (=the Schedule Item Code) in the subsequent next step.</description>
        <name>Create_WorkPlan_Record</name>
        <label>Create New Work Plan</label>
        <locationX>138</locationX>
        <locationY>2150</locationY>
        <assignRecordIdToReference>var_WorkPlanId</assignRecordIdToReference>
        <connector>
            <targetReference>Assign_Work_Step_Record_Values</targetReference>
        </connector>
        <inputAssignments>
            <field>Description</field>
            <value>
                <stringValue>Work Plan to capture a &quot;Schedule Item Code&quot; for the job/activity carried out by the field crew.</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Name</field>
            <value>
                <stringValue>Schedule Item Code</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>WorkOrderId</field>
            <value>
                <elementReference>ParentId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>WorkOrderLineItemId</field>
            <value>
                <elementReference>var_WorkOrderLineItem_SingleRecord.Id</elementReference>
            </value>
        </inputAssignments>
        <object>WorkPlan</object>
    </recordCreates>
    <recordCreates>
        <description>Creates a new Work Step Record that will hold the selected Schedule Item Code information selected by the user on the previous screen. The Work Step will be related to the new Work Plan created in the previous Create action.</description>
        <name>Create_WorkStep_Record</name>
        <label>Create new Work Step Record</label>
        <locationX>50</locationX>
        <locationY>2486</locationY>
        <connector>
            <targetReference>Screen_ScheduleItemCodeAdded</targetReference>
        </connector>
        <inputReference>var_SIC_WorkStep_SingleRecord</inputReference>
    </recordCreates>
    <recordLookups>
        <description>Attempt to lookup at least one Allowed Schedule Item related to the Work Type of the Work Order Line Item selected in the previous step. This will be used as a validation whether Schedule Item records exist that have to be selected in the next screen, otherwise show an error message to the user.</description>
        <name>Get_Allowed_Schedule_Items</name>
        <label>Get Allowed Schedule Items</label>
        <locationX>226</locationX>
        <locationY>1550</locationY>
        <assignNullValuesIfNoRecordsFound>true</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Decision_AllowedScheduleItems_exist</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>MSN_Work_Type__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>var_WorkOrderLineItem_SingleRecord.WorkTypeId</elementReference>
            </value>
        </filters>
        <object>MSN_Allowed_ScheduleItems__c</object>
        <outputAssignments>
            <assignToReference>var_AllowedScheduleItem_exists</assignToReference>
            <field>Id</field>
        </outputAssignments>
    </recordLookups>
    <recordLookups>
        <description>Lookup details from the Parent Work Order related to the Service Appointment triggering this flow. This will be used to prefill fields on the new Work Order Line Item created at the end of this flow.</description>
        <name>Get_Parent_WorkOrder_Details</name>
        <label>Get Parent Work Order Details</label>
        <locationX>446</locationX>
        <locationY>1070</locationY>
        <assignNullValuesIfNoRecordsFound>true</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Related_WOLIs</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>ParentId</elementReference>
            </value>
        </filters>
        <object>WorkOrder</object>
        <outputReference>var_Parent_Work_Order</outputReference>
        <queriedFields>Id</queriedFields>
        <queriedFields>WorkTypeId</queriedFields>
        <queriedFields>ServiceTerritoryId</queriedFields>
    </recordLookups>
    <recordLookups>
        <description>If the Service Appointment is child to a Work Order Line Item, then we need to get the record Id of the Parent Work Order of this WOLI first in order to make the following steps of the flow compatible.</description>
        <name>Get_ParentRecordId_WOLI</name>
        <label>Get Parent Work Order of WOLI</label>
        <locationX>402</locationX>
        <locationY>734</locationY>
        <assignNullValuesIfNoRecordsFound>true</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Parent_WorkOrder_Details</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>ParentId</elementReference>
            </value>
        </filters>
        <object>WorkOrderLineItem</object>
        <outputAssignments>
            <assignToReference>ParentId</assignToReference>
            <field>WorkOrderId</field>
        </outputAssignments>
    </recordLookups>
    <recordLookups>
        <description>Attempt to lookup at least one Work Order Line Item related to the Parent Work Order of the the Service Appointment triggering this flow. This will be used as a validation whether WOLIs exist that have to be selected in the next screen.</description>
        <name>Get_Related_WOLIs</name>
        <label>Get related Work Order Line Items</label>
        <locationX>446</locationX>
        <locationY>1190</locationY>
        <assignNullValuesIfNoRecordsFound>true</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Decision_Check_if_WOLIS_exist</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>WorkOrderId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>ParentId</elementReference>
            </value>
        </filters>
        <object>WorkOrderLineItem</object>
        <outputAssignments>
            <assignToReference>var_WorkOrderLineItemId</assignToReference>
            <field>Id</field>
        </outputAssignments>
    </recordLookups>
    <recordLookups>
        <description>Attempt to look up the &quot;Schedule Item Code&quot; Work Plan related to the Work Order Line Item selected in the previous step. This will be used as a validation of whether a Work Plan already exists where a Work Step could be added to, or otherwise, a new Work Plan is to be created first.</description>
        <name>Get_ScheduleItemCode_WorkPlan</name>
        <label>Get Schedule Item Code Work Plan</label>
        <locationX>50</locationX>
        <locationY>1910</locationY>
        <assignNullValuesIfNoRecordsFound>true</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Decision_WorkPlan_exists</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>WorkOrderLineItemId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>var_WorkOrderLineItem_SingleRecord.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Schedule Item Code</stringValue>
            </value>
        </filters>
        <object>WorkPlan</object>
        <outputAssignments>
            <assignToReference>var_WorkPlanId</assignToReference>
            <field>Id</field>
        </outputAssignments>
    </recordLookups>
    <recordLookups>
        <description>Lookup records details from the Service Appointment triggering this flow/subflow when opened from Desktop Salesforce only. The Record Id is handed over by the Desktop Salesforce flow into the Variable &quot;recordId&quot; and has to be copied over into the variable &quot;Id&quot; to make it compatible. Also we assign the &quot;ParentId&quot; variable.</description>
        <name>Get_ServiceAppointment_IDs_DesktopFlow</name>
        <label>Get Service Appointment Record IDs</label>
        <locationX>402</locationX>
        <locationY>278</locationY>
        <assignNullValuesIfNoRecordsFound>true</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Decision_DetermineObjectType_ParentRecord</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </filters>
        <object>ServiceAppointment</object>
        <outputAssignments>
            <assignToReference>Id</assignToReference>
            <field>Id</field>
        </outputAssignments>
        <outputAssignments>
            <assignToReference>ParentId</assignToReference>
            <field>ParentRecordId</field>
        </outputAssignments>
    </recordLookups>
    <screens>
        <description>Shows an Error Message to the user in case no &quot;Allowed Schedule Items&quot; could have been found in the previous Get Records Element.</description>
        <name>Screen_No_ScheduleItemCodes</name>
        <label>No Schedule Item Codes available</label>
        <locationX>402</locationX>
        <locationY>1790</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <fields>
            <name>Screen_No_ScheduleItemCodes_ErrorMessage</name>
            <fieldText>&lt;p&gt;&lt;strong style=&quot;font-size: 16px;&quot;&gt;Error - No Schedule Item Codes found&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;It looks like we couldn&apos;t find any allowed  Schedule Item Codes for the Activity/Asset &lt;strong style=&quot;background-color: rgb(255, 255, 255); color: rgb(68, 68, 68);&quot;&gt;{!Screen_SelectSIC_Choiceset}&lt;/strong&gt; you selected previously.&lt;/p&gt;&lt;p&gt;Please get in touch with your friendly Salesforce Support team and make them aware of this error.&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <description>Shows an Error Message to the user in case no &quot;Record ID&quot; is populated into either the &quot;ID&quot; variable or &quot;recordID&quot; variable when the flow is opened.</description>
        <name>Screen_NoRecordId</name>
        <label>No Record Id</label>
        <locationX>666</locationX>
        <locationY>278</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <fields>
            <name>Screen_NoRecordId_ErrorText</name>
            <fieldText>&lt;p&gt;&lt;b style=&quot;font-size: 16px;&quot;&gt;Error - No Service Appointment Record Id&lt;/b&gt;&lt;/p&gt;&lt;p&gt;It looks like we couldn&apos;t determine the unique record ID for your Service Appointment when opening this feature.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;Please get in touch with your friendly Salesforce Support team and make them aware of this error.&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <description>This error screen is shown when the flow could not find any related WOLIs to the Parent Work Order of the Service Appointment triggering this flow. It prompts the user to user</description>
        <name>Screen_NoWOLIFound</name>
        <label>No activity or asset found</label>
        <locationX>666</locationX>
        <locationY>1430</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>Screen_NoWOLIFound_Error_Text</name>
            <fieldText>&lt;p&gt;&lt;strong style=&quot;font-size: 16px;&quot;&gt;Error - No asset or activity code found &lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;It looks like you haven&apos;t added an asset or activity code to this job jet. In order to add an additional schedule item code, you first have to add an asset.&lt;/p&gt;&lt;p&gt;Please use the feature &quot;Work Done &amp;gt; Search for an asset&quot; in order to add an asset.&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <description>Used as the final success screen after a new Work Plan and Workstep Record have been created successfully.</description>
        <name>Screen_ScheduleItemCodeAdded</name>
        <label>Schedule Item Code Added</label>
        <locationX>50</locationX>
        <locationY>2606</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>Screen_ScheduleItemCodeAdded_SuccessMessage</name>
            <fieldText>&lt;p&gt;&lt;strong style=&quot;font-size: 16px;&quot;&gt;Success! Schedule Item Code added. &lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;Your schedule item code &lt;strong&gt;{!Screen_SelectSIC_Choiceset}&lt;/strong&gt; has been added to your job successfully.&lt;/p&gt;&lt;p&gt;You should see the new schedule item under the &quot;Work Plan&quot; tab. Make sure to reload the screen by pulling down the screen with your finger on your tablet in case you cannot see it.&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <description>This screen is used to show all Schedule Item Codes that are allowed for the work type of the selected WOLI on the previous screen. This is looked up using the Record Choice Set &quot;choiceSet_SearchAvailableSIC&quot; and prompts the user to select the correct SIC from the returned choices.</description>
        <name>Screen_SelectSIC</name>
        <label>Select Schedule Item Code</label>
        <locationX>50</locationX>
        <locationY>1790</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>Get_ScheduleItemCode_WorkPlan</targetReference>
        </connector>
        <fields>
            <name>Screen_SelectSIC_HintText</name>
            <fieldText>&lt;p&gt;Please select an additional schedule item code for &lt;strong&gt;{!Screen_SelectWOLI_ActivityCodeChoiceSet}&lt;/strong&gt; .&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>Screen_SelectSIC_Choiceset</name>
            <choiceReferences>choiceSet_SearchAllowedScheduleItems</choiceReferences>
            <dataType>String</dataType>
            <fieldText>Select additional schedule item code</fieldText>
            <fieldType>RadioButtons</fieldType>
            <isRequired>true</isRequired>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <description>The user will select the Activity / Asset (=Work Order Line Item) they have been working on in order to add an additional Schedule Item Code to the same WOLI later. The user selection is then used in the next Screen element to present a list of all &quot;Allowed Schedule Items&quot; for this particular Work Type (&quot;Activity Code&quot;) so that the user can select an additional Schedule Item Code to add as a Work Plan &amp; Work Step</description>
        <name>Screen_SelectWOLI</name>
        <label>Select Your Activity / Asset</label>
        <locationX>226</locationX>
        <locationY>1430</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>Get_Allowed_Schedule_Items</targetReference>
        </connector>
        <fields>
            <name>Screen_SelectWOLI_HintText</name>
            <fieldText>&lt;p&gt;Please select the activity code/asset where you would like to add another Schedule Item Code.&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>Screen_SelectWOLI_ActivityCodeChoiceSet</name>
            <choiceReferences>choiceSet_SearchWorkOrderLineItems</choiceReferences>
            <dataType>String</dataType>
            <fieldText>Select your activity</fieldText>
            <fieldType>RadioButtons</fieldType>
            <isRequired>true</isRequired>
        </fields>
        <nextOrFinishButtonLabel>Search</nextOrFinishButtonLabel>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <description>Shows an Error Message to the user in case the decision cannot determine what Object type the Parent Record ID in the &quot;ParentId&quot; variable is of. (Has to be either Work Order or Work Order Line Item)</description>
        <name>Screen_UnknownObjectType</name>
        <label>Unknown Object Type</label>
        <locationX>666</locationX>
        <locationY>734</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <fields>
            <name>Screen_UnknownObjectType_ErrorMessage</name>
            <fieldText>&lt;p&gt;&lt;b style=&quot;font-size: 16px;&quot;&gt;Error - Unknown Parent Record Type&lt;/b&gt;&lt;/p&gt;&lt;p&gt;It looks like we cannot determine from which parent record (must be Work Order or Work Order Line Item) you attempted to open this feature from.&lt;/p&gt;&lt;p&gt;Please get in touch with your friendly Salesforce Support team and make them aware of this error.&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <start>
        <locationX>320</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Decision_OpenedFromMobileOrDesktop</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <variables>
        <description>Stores the Record ID of the record that triggered this flow. In this case the Service Appointment ID. This is handed over from the FSL Mobile App into the flow.</description>
        <name>Id</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <description>Stores the ParentRecord ID of the record that triggered this flow (usually the Work Order Id of the Service Appointment). This is handed over from the FSL Mobile App into the flow.</description>
        <name>ParentId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <description>Used to store the Record ID of the &quot;Service Appointment&quot;, when the flow is opened from a Desktop Device.</description>
        <name>recordId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Used to store the Id of the looked up &quot;Allowed Schedule Item&quot; from the Get Element &quot;Get Allowed Schedule Items&quot;. This is only used as a validation in the Decision Element &quot;Check if Allowed Schedule Items exist&quot;.</description>
        <name>var_AllowedScheduleItem_exists</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Used to store details from the Parent Work Order related to the Service Appointment triggering this flow.</description>
        <name>var_Parent_Work_Order</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>WorkOrder</objectType>
    </variables>
    <variables>
        <description>Record Collection Variable to store the record details from the Service Appointment triggering this flow.</description>
        <name>var_Service_Appointment</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>ServiceAppointment</objectType>
    </variables>
    <variables>
        <description>Record Variable for the &quot;Work Step&quot; Record that is created for the &quot;Schedule Item Code&quot; at the end of this flow.</description>
        <name>var_SIC_WorkStep_SingleRecord</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>WorkStep</objectType>
    </variables>
    <variables>
        <description>Record Variable for the &quot;Work Order Line Item&quot; that is created at the end of this flow.</description>
        <name>var_WorkOrderLineItem_SingleRecord</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>WorkOrderLineItem</objectType>
    </variables>
    <variables>
        <description>Stores the Record Id of the newly created Work Order Line Item after it has been created in Salesforce and synced back to the Field Service Mobile App.</description>
        <name>var_WorkOrderLineItemId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Used to store the Id of the Work Plan that is created in the &quot;Create New Work Plan&quot; element. This then will be used in a subsequent step to create a related &quot;Work Step&quot; record to this new Work Plan. Please note: as of limitations with the Field Service Mobile App Flows, the Id is saved into a separate variable instead of simply using a Record Variable.</description>
        <name>var_WorkPlanId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
